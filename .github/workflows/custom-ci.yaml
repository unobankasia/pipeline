name: Template-CI

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  workflow_call:
    inputs:
      REGION:
        type: string        
      MICROSERVICES:
        type: string         
      ASSUME_ROLE:
        type: string         
      ASSUME_ROLE_PROD:
        type: string         
      EXCLUDED_CLASS:
        type: string                
      PLATFORM_REPO:
        type: string        
      BUILD_PATH:
        type: string         
      JAVA_HOME:
        type: string        
      MAVEN_HOME:
        type: string
    
env:
  ## Sets environment variable
  JAVA_HOME: ${{inputs.JAVA_HOME}}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Custom-CI:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Run scanner for the repository
        continue-on-error: true
        run: |
          whispers ${{ github.workspace }} > whispers.txt
          .github/workflows/scripts/whispers.sh  
          
      - name: Extract branch name
        run: |
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
          echo ${{steps.vars.outputs.branch}}
        id: extract_branch
        
      - name: Setup Tag for image and branch
        run: |
          echo "IMAGE_TAG=custom-${GITHUB_REF##*/}-$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
          echo "BRANCH=custom-${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "$GITHUB_ENV"   
               
      - name: Maven Build  
        run: ${{inputs.MAVEN_HOME}}/bin/mvn clean package -Denv=${{steps.extract_branch.outputs.branch}}
        working-directory: ${{inputs.BUILD_PATH}}

      - name: SonarQube Scan
        uses: unobankasia/sonarqube-action-1@v1.2.1
        continue-on-error: true
        with:
          host: ${{ secrets.SONARQUBE_HOST }}
          login: ${{ secrets.SONARQUBE_TOKEN }}
          projectBaseDir: ./
          projectKey: ${{inputs.MICROSERVICES}}
          binaries: target/classes
          exclusions: ${{inputs.EXCLUDED_CLASS}}
      
#       - name: SonarQube Quality Gate check
#         continue-on-error: true
#         uses: sonarsource/sonarqube-quality-gate-action@master
#         timeout-minutes: 5
#         env:
#          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
#         with:
#          scanMetadataReportFile: .scannerwork/report-task.txt
      
