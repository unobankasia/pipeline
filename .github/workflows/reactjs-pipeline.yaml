name: ReactJS Pipeline

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: 
      - lam-dev
      - lam-sit
  pull_request:
    types: [closed]
    branches: 
      - lam-uat
      - lam-prodpush
      
jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
       # Install dependencies and build
      - name: Install Dependencies and Build
        run: |
          npm install --force
          npm run build
      
      - name: SonarQube Scan
        uses: unobankasia/sonarqube-action-1@v1.2.1
        with:
          host: ${{ secrets.SONARQUBE_HOST }}
          login: ${{ secrets.SONARQUBE_TOKEN }}
          projectBaseDir: ./
          # Adjust other parameters as needed
	
      - name: Setup Tag for image and branch
        run: |
          echo "IMAGE_TAG=${GITHUB_REF##*/}-$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
          echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV	
        
      - name: Docker Build
        run: docker build -t my-react-app .
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "ap-southeast-1"
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Create ECR repository
        run: aws ecr create-repository --repository-name my-react-app --region "ap-southeast-1"
      
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker tag my-react-app:latest $ECR_REGISTRY/my-react-app:latest
          docker push $ECR_REGISTRY/my-react-app:latest
      
      - name: Vulnerabilities
        run: trivy image my-react-app:latest  # Adjust this based on your vulnerability scanning tool
      
      - name: Update Image tag
        run: |
          # Implement script to update image tag in deployment configuration
          # Example: sed -i 's/image: .*/image: "$ECR_REGISTRY\/my-react-app:latest"/' deployment.yaml
          run: |
          git clone https://${{secrets.GIT_TOKEN}}@github.com/unobankasia/${{inputs.PLATFORM_REPO}}.git
          cd ${{inputs.PLATFORM_REPO}}/envs/${{env.BRANCH}}/03-applications/${{inputs.MICROSERVICES}}
          git checkout -b $IMAGE_TAG
          sed -i 's/tag.*/tag: "${{env.IMAGE_TAG}}"/' values.yaml
          git add values.yaml
          git commit -m "${{inputs.MICROSERVICES}} | ${{env.IMAGE_TAG}}"
          git push -u origin $IMAGE_TAG
          gh pr create --fill
          sleep 3
          gh pr merge -sd --admin
      # Additional steps if needed
